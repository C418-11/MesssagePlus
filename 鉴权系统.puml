@startuml
'https://plantuml.com/sequence-diagram

autonumber
title 鉴权系统时序图

'鉴权服务器初始化
actor 鉴权客户端
collections 鉴权服务器
database 鉴权数据库
鉴权服务器 -> 鉴权数据库: 内置数据库启动
鉴权服务器 -> 内置数据库初始化线程: 启动线程
内置数据库初始化线程 -> 鉴权数据库: 连接
鉴权数据库 --> 内置数据库初始化线程: LOGIN.ASK_USER_AND_PASSWORD 请求数据库账号密码
内置数据库初始化线程 --> 鉴权数据库: Login.ACK_USER_AND_PASSWORD 响应数据库账号密码
鉴权数据库 --> 内置数据库初始化线程: LOGIN.LOGIN_SUCCESS 登录成功
内置数据库初始化线程 -> 鉴权数据库: 初始化数据库
内置数据库初始化线程 -x 内置数据库初始化线程: 结束线程

collections 登录系统
control 监听线程
control 分类线程
鉴权服务器 -> 监听线程: 启动线程
'鉴权服务器初始化结束

鉴权客户端 -> 监听线程: 连接
监听线程 -> 监听线程: 实例化一个分类线程(传递与鉴权客户端的连接obj)并加入线程池
监听线程 -> 分类线程: 启动线程
监听线程 -> 监听线程: 等待下一个链接
分类线程 -> 分类线程: 等待鉴权客户端发送服务类型
鉴权客户端 -> 分类线程: {"type": XXXX} 发送服务类型
entity 服务
分类线程 -> 服务线程池: 调用指定服务类型对应的服务线程池ServicePool.add_service
服务线程池 -> 服务: 实例化指定服务(传递与鉴权客户端的连接obj)
服务 -> 登录系统: 初始化超类
登录系统 --> 鉴权客户端: Login.ASK_DATA 请求登录数据
鉴权客户端 --> 登录系统: Login.ACK_DATA 响应登录数据
登录系统 -> 鉴权数据库: 连接
鉴权数据库 --> 登录系统: LOGIN.ASK_USER_AND_PASSWORD 请求数据库账号密码
登录系统 --> 鉴权数据库: Login.ACK_USER_AND_PASSWORD 响应数据库账号密码
鉴权数据库 --> 登录系统: LOGIN.LOGIN_SUCCESS 登录成功
登录系统 --> 服务: Login.ACK_DATA & DatabaseClient
服务线程池 -> 服务线程池: 实例化一个新线程去调用Service.start
服务线程池 -> 服务: 启动线程
服务线程池 --> 分类线程: 我滴任务完成啦(穿山甲音)
分类线程 -x 分类线程: 结束线程
服务 -> 登录系统: super().login()
登录系统 -> 鉴权数据库: 查找客户端提供的数据中的uuid
鉴权数据库 --> 登录系统: 响应uuid下的所有数据



@enduml
